// --------------------------------------------
// PlayPlanCraft - Prisma Schema
// --------------------------------------------
// This schema defines the core data structure for an
// AI-assisted early childhood lesson planning app,
// including lesson planning, supply tracking, scheduling,
// developmental goals, tagging, reflections, reminders,
// personal supply management, and organizational support.
// --------------------------------------------

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --------------------------------------------
// ENUMS - Strict type-safe values used throughout models
// --------------------------------------------

//
// AgeGroup - Supported early childhood stages,
// used to categorize lessons, activities, and goals.
//
enum AgeGroup {
  INFANT        // 0–12 months
  TODDLER       // 1–3 years
  PRESCHOOL     // 3–5 years
  KINDERGARTEN  // 5–6 years
}

//
// Subject - Focus areas or subjects for lessons.
//
enum Subject {
  LITERACY
  MATH
  SCIENCE
  ART
  MUSIC
  PHYSICAL_EDUCATION
  SOCIAL_EMOTIONAL
}

//
// ActivityType - Categories of structured activities within lesson plans.
//
enum ActivityType {
  STORYTELLING
  CRAFT
  MOVEMENT
  MUSIC
  EXPERIMENT
  FREE_PLAY
  OUTDOOR
}

//
// SupplyStatus - Inventory state for supplies.
//
enum SupplyStatus {
  AVAILABLE       // Fully stocked and ready to use
  LOW             // Supply is running low
  OUT_OF_STOCK    // Supply exhausted and needs restocking
}

//
// UserRole - Permissions/access levels for users.
//
enum UserRole {
  EDUCATOR       // Default user role for educators
  ADMIN          // Application administrators
  ASSISTANT      // Assistants or helpers with limited rights
}

//
// LessonStatus - Life cycle status of lesson plans.
//
enum LessonStatus {
  DRAFT          // Being edited or developed
  PUBLISHED      // Ready for use and sharing
  ARCHIVED       // No longer active or in use
}

//
// Theme - Optional thematic classifications for lessons.
//
enum Theme {
  SEASONS
  NATURE
  HOLIDAYS
  EMOTIONS
  COMMUNITY
  ANIMALS
  TRANSPORTATION
  COLORS
  SHAPES
  NUMBERS
}

// --------------------------------------------
// MODELS - Core entities and their relations
// --------------------------------------------

//
// User Model - Represents educators, admins, or assistants.
// Each user can create multiple lesson plans, schedules, reminders, lesson notes,
// and manage their personal supplies. Users optionally belong to an organization.
// The role is nullable until onboarding is complete, and isOnboarded tracks onboarding status.
//
model User {
  id             String        @id @default(cuid())            
  email          String        @unique                         
  password       String?       // Nullable for social login users
  name           String                                         
  role           UserRole?     // Nullable until role selected during onboarding
  isOnboarded    Boolean       @default(false)                 // Tracks onboarding completion
  createdAt      DateTime      @default(now())                 
  updatedAt      DateTime      @updatedAt                      // Automatically updated on changes

  // Relationships:
  // One User can create many LessonPlans (one-to-many)
  lessonPlans    LessonPlan[]                                  
  // One User can have many scheduled lessons (one-to-many)
  schedules      Schedule[]                                    
  // One User can track many UserSupply records (one-to-many)
  suppliesOwned  UserSupply[]                                  
  // One User can create many Reminders (one-to-many)
  reminders      Reminder[]                                    
  // One User can author many LessonNotes (one-to-many)
  lessonNotes    LessonNote[]                                  
  // Optional many Users belong to one Organization (many-to-one)
  organization   Organization? @relation(fields: [organizationId], references: [id]) 
  organizationId String?                                        
}

//
// Organization Model - Represents a school, childcare center, or workspace.
// Can have many users associated with it.
//
model Organization {
  id     String  @id @default(cuid())                         
  name   String                                             

  // One Organization can have many Users (one-to-many)
  users  User[]                                             
}

//
// Supply Model - Represents reusable materials or items for lessons.
// Supplies can be linked to multiple lesson plans through LessonPlanSupply join table,
// tracked personally by many users through UserSupply, and associated with reminders.
//
model Supply {
  id           String              @id @default(cuid())         
  name         String                                           
  unit         String                                           
  status       SupplyStatus        @default(AVAILABLE)           
  createdAt    DateTime            @default(now())              

  // Relationships:
  // One Supply can be linked to many LessonPlanSupply records (many-to-many via join table)
  lessonLinks  LessonPlanSupply[]                               
  // One Supply can be tracked by many UserSupply records (many-to-many via join table)
  users        UserSupply[]                                     
  // One Supply can have many associated Reminders (one-to-many)
  reminders    Reminder[]                                       
}

//
// UserSupply Model - Tracks quantities of supplies owned by each user.
// Represents many-to-many relation between User and Supply with quantity attribute.
//
model UserSupply {
  id        String  @id @default(cuid())                      
  // Many UserSupply records belong to one User (many-to-one)
  user      User    @relation(fields: [userId], references: [id])
  userId    String                                          
  // Many UserSupply records belong to one Supply (many-to-one)
  supply    Supply  @relation(fields: [supplyId], references: [id])
  supplyId  String                                          
  quantity  Int                                             
}

//
// LessonPlan Model - Represents a lesson plan with details and related entities.
// Each lesson plan is created by one user, contains many activities, supplies, schedules,
// tags, developmental goals, lesson notes, and optional reminders.
//
model LessonPlan {
  id               String              @id @default(cuid())        
  title            String                                          
  ageGroup         AgeGroup                                        
  subject          Subject                                         
  theme            Theme?                                          
  status           LessonStatus        @default(DRAFT)                
  createdAt        DateTime            @default(now())               

  // Relationships:
  // Many LessonPlans are created by one User (many-to-one)
  createdBy        User                @relation(fields: [createdById], references: [id])
  createdById      String                                          
  // One LessonPlan contains many Activities (one-to-many)
  activities       Activity[]                                     
  // One LessonPlan links to many LessonPlanSupply records (many-to-many via join table)
  supplies         LessonPlanSupply[]                             
  // One LessonPlan can have many Schedules (one-to-many)
  schedules        Schedule[]                                     
  // One LessonPlan links to many LessonPlanTag records (many-to-many via join table)
  tags             LessonPlanTag[]                                
  // One LessonPlan can be linked to many DevelopmentGoals (many-to-many)
  developmentGoals DevelopmentGoal[]   @relation("LessonPlanDevelopmentGoals")  
  // One LessonPlan can have many LessonNotes (one-to-many)
  lessonNotes      LessonNote[]                                   
  // One LessonPlan can have many Reminders (one-to-many)
  reminders        Reminder[]                                     
}

//
// Activity Model - Represents a single activity within a lesson.
// Each activity belongs to one lesson plan.
//
model Activity {
  id            String        @id @default(cuid())             
  title         String                                         
  description   String                                         
  activityType  ActivityType                                   
  durationMins  Int                                            

  // Relationship:
  // Many Activities belong to one LessonPlan (many-to-one)
  lessonPlan    LessonPlan    @relation(fields: [lessonPlanId], references: [id])
  lessonPlanId  String                                         
}

//
// LessonPlanSupply Model - Join table linking supplies to lessons with quantity and optional notes.
// Represents many-to-many relation between LessonPlan and Supply with extra fields.
//
model LessonPlanSupply {
  id            String        @id @default(cuid())             
  // Many LessonPlanSupply records belong to one LessonPlan (many-to-one)
  lessonPlan    LessonPlan    @relation(fields: [lessonPlanId], references: [id])
  lessonPlanId  String                                         
  // Many LessonPlanSupply records belong to one Supply (many-to-one)
  supply        Supply        @relation(fields: [supplyId], references: [id])
  supplyId      String                                         
  quantity      Int                                            
  note          String?                                        
}

//
// Schedule Model - Represents scheduled lessons for users.
// Links a user with a lesson plan on a specific date and time.
//
model Schedule {
  id            String        @id @default(cuid())             
  // Many Schedules belong to one User (many-to-one)
  user          User          @relation(fields: [userId], references: [id])
  userId        String                                         
  // Many Schedules belong to one LessonPlan (many-to-one)
  lessonPlan    LessonPlan    @relation(fields: [lessonPlanId], references: [id])
  lessonPlanId  String                                         
  date          DateTime                                       
  startTime     DateTime                                       
  endTime       DateTime                                       
}

//
// LessonNote Model - Post-lesson reflections or notes by educators.
// Each note belongs to one user and one lesson plan.
//
model LessonNote {
  id            String        @id @default(cuid())             
  // Many LessonNotes belong to one User (many-to-one)
  user          User          @relation(fields: [userId], references: [id])
  userId        String                                         
  // Many LessonNotes belong to one LessonPlan (many-to-one)
  lessonPlan    LessonPlan    @relation(fields: [lessonPlanId], references: [id])
  lessonPlanId  String                                         
  note          String                                         
  createdAt     DateTime      @default(now())                   
}

//
// Reminder Model - User-created task reminders with optional context.
// Reminders can optionally be linked to a lesson plan or supply for context.
//
model Reminder {
  id            String        @id @default(cuid())             
  // Many Reminders belong to one User (many-to-one)
  user          User          @relation(fields: [userId], references: [id])
  userId        String                                         
  title         String                                         
  description   String?                                        
  dueDate       DateTime                                       
  completed     Boolean       @default(false)                    

  // Optional contextual relationships:
  // Many Reminders can optionally link to one LessonPlan (many-to-one)
  lessonPlan    LessonPlan?   @relation(fields: [lessonPlanId], references: [id])
  lessonPlanId  String?
  // Many Reminders can optionally link to one Supply (many-to-one)
  supply        Supply?       @relation(fields: [supplyId], references: [id])
  supplyId      String?

  createdAt     DateTime      @default(now())                   
}

//
// Tag Model - Tags for smart tagging and filtering of lesson plans.
// Tags can be linked to many lesson plans via the LessonPlanTag join table.
//
model Tag {
  id            String        @id @default(cuid())             
  name          String        @unique                          
  description   String?                                        

  // One Tag can be linked to many LessonPlanTag records (one-to-many)
  lessonPlans   LessonPlanTag[]                               
}

//
// LessonPlanTag Model - Join table linking lesson plans to tags.
// Represents many-to-many relationship between LessonPlan and Tag.
//
model LessonPlanTag {
  id            String        @id @default(cuid())             

  // Many LessonPlanTag records belong to one LessonPlan (many-to-one)
  lessonPlan    LessonPlan    @relation(fields: [lessonPlanId], references: [id])
  lessonPlanId  String                                         

  // Many LessonPlanTag records belong to one Tag (many-to-one)
  tag           Tag           @relation(fields: [tagId], references: [id])
  tagId         String                                         
}

//
// DevelopmentGoal Model - Represents developmental milestones or goals aligned with lessons.
// A development goal can be linked to multiple lesson plans via a many-to-many relation.
//
model DevelopmentGoal {
  id            String        @id @default(cuid())             
  name          String                                         
  description   String                                         
  ageGroup      AgeGroup                                       

  // One DevelopmentGoal can be targeted by many LessonPlans (many-to-many)
  lessonPlans   LessonPlan[]  @relation("LessonPlanDevelopmentGoals")                                   
}